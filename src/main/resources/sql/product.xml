<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product">


    <!-- 01. 상품 전체 리스트 -->
    <select id="productList" parameterType="com.project.withpet.model.Product" resultType="com.project.withpet.model.Product">

        <!-- 최신순 -->
        <if test="sortValue.equals('recent')">
        select * from ( select rownum rn, product.* from (
        select * from product
        <where>
            <if test="keyword != null and search != 'subcon'">
                ${search} like '%'||#{keyword}||'%'
            </if>
            <if test="keyword != null and search == 'subcon'">
                pro_name like '%'||#{keyword}||'%' or
                pro_content like '%'||#{keyword}||'%'
            </if>
        </where>
        order by pro_no desc ) product )
        where rn between #{startRow} and #{endRow}
        </if>
        <!-- 조회순 -->
        <if test="sortValue.equals('readcnt')">
            select * from (select rownum rn, product.* from (
            select * from product
            <where>
                <if test="keyword != null and search != 'subcon'">
                    ${search} like '%'||#{keyword}||'%'
                </if>
                <if test="keyword != null and search == 'subcon'">
                    pro_name like '%'||#{keyword}||'%' or pro_content like '%'||#{keyword}||'%'
                </if>

            </where>
            order by pro_readcnt desc, pro_no desc ) product )
            where rn between #{startRow} and #{endRow}
        </if>

        <!-- 추천순  -->
        <if test="sortValue.equals('likecnt')">
            select * from (select rownum rn, product.* from (
            select * from product
            <where>
                <if test="keyword != null and search != 'subcon'">
                    ${search} like '%'||#{keyword}||'%'
                </if>
                <if test="keyword != null and search == 'subcon'">
                    pro_name like '%'||#{keyword}||'%' or pro_content like '%'||#{keyword}||'%'
                </if>

            </where>
            order by pro_likecnt desc, pro_no desc ) product )
            where rn between #{startRow} and #{endRow}
        </if>

    </select>

    <!-- 01-1 글 갯수 -->
    <select id="getCount" parameterType="com.project.withpet.model.Product" resultType="int">
        select count(*) from product
        <where>

            <if test="keyword != null and search != 'subcon'">
                ${search} like '%'||#{keyword}||'%'
            </if>
            <if test="keyword != null and search == 'subcon'">
                pro_name like '%'||#{keyword}||'%' or
                pro_content like '%'||#{keyword}||'%'
            </if>

        </where>
    </select>

    <!-- 02-1 조회수 증가 -->
    <update id="hit" parameterType="int">
        update product set pro_readcnt = pro_readcnt+1 where pro_no = #{pro_no}
    </update>

    <!-- 02 상세정보 구하기 -->
    <select id="pro_content" parameterType="int" resultType="com.project.withpet.model.Product">
        select * from product where pro_no = #{pro_no}
    </select>

    <!-- 03. 글작성 -->
    <insert id="productWrite" parameterType="com.project.withpet.model.Product">
        insert into product (
             pro_no, bus_id, pro_name, stock, pro_content,
             pro_img, price, pro_readcnt, pro_likecnt, pro_del
             ) values (
             product_seq.NEXTVAL,#{bus_id},#{pro_name},#{stock},#{pro_content},
             #{pro_img},#{price},0,0,'n')

    </insert>
    <!-- 04. 글 수정-->
    <update id="productUpdate" parameterType="com.project.withpet.model.Product">
        update product
            set
                pro_name = #{pro_name},
                stock = #{stock},
                pro_content = #{pro_content},
                pro_img = #{pro_img, jdbcType=VARCHAR},
                price = #{price}
            where pro_no = #{pro_no}
    </update>
<!--05. 삭제-->
    <!--업데이트로 삭제 처리 테이블 자체 삭제가 되면 안됨 -->
    <update id="productDelete" parameterType="com.project.withpet.model.Product">
        UPDATE
            product
        SET
            pro_del = 'y'
        WHERE
            pro_no = #{pro_no}
    </update>

    <!-- 병원 게시판 게시글 추천수 업데이트 -->
    <update id="updateLike" parameterType="int">
        update product set pro_likecnt = pro_likecnt+1 where pro_no=#{pro_no}
    </update>


</mapper>
